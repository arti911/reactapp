{"version":3,"sources":["components/Main/index.jsx","Aviasales/components/Filter/constants.js","Aviasales/components/Filter/index.jsx","Aviasales/utils/filtering.js","Aviasales/constants.js","Aviasales/utils/index.js","Aviasales/components/Card/Information/index.jsx","Aviasales/components/Card/index.jsx","Aviasales/components/List/index.jsx","Aviasales/components/Header/index.jsx","Aviasales/components/Button/index.jsx","Aviasales/query/index.js","Aviasales/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Title","Typography","Main","to","mainPath","STOPS","Group","Checkbox","Filter","props","useState","checkAll","setCheckAll","items","checkedList","setCheckedList","onChange","useCallback","list","length","clickFilterHandler","countStops","listStops","Object","entries","stop","key","value","includes","push","searchStops","onCheckAllChange","event","target","checked","className","level","title","options","SORT","TABS","FILTERS","values","sumDurationStops","ticket","reduce","acc","item","duration","filteringTickets","tickets","parameter","stops","sort","a","b","price","segments","filter","from","filterOfTransfers","range","date","milisecondStartDate","Date","parse","milisecondDuration","dtStart","dtFinish","getHours","getMinutes","formatTime","days","hours","Math","floor","minutes","ceil","stopsCount","count","message","toUpperCase","Information","origin","destination","join","Card","src","carrier","alt","map","List","random","HeaderMain","ButtonMain","type","size","onClick","onClickHandler","label","getSearchId","fetch","data","json","response","getTickets","searchId","status","Error","console","log","Text","TabPane","Tabs","Aviasales","setSearchId","ticketsAll","setTicketsAll","endSearchTickets","setEndSearchTickets","firstPackTickets","setFirstPackTickets","defaultFilter","setDefaultFilter","viewTickets","sortTickets","setSortTickets","keys","setStops","useEffect","then","catch","warning","slice","splice","onLoadTickets","Header","defaultActiveKey","tab","direction","description","Button","App","path","process","component","MainPage","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.7ecab484.chunk.js","sourcesContent":["import { Typography } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { mainPath } from \"../../App\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Main = () => (\r\n  <>\r\n    <Title>Hello World!</Title>\r\n    <Link to={`${mainPath}/aviasales`}>Поикс дешёвых авиабилетов</Link>\r\n  </>\r\n);\r\n\r\nexport default Main;\r\n","export const STOPS = [\"Без пересадок\", \"1 пересадка\", \"2 пересадки\", \"3 пересадки\"];","import { Typography, Checkbox } from \"antd\";\r\nimport { useCallback } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { searchStops } from \"../../utils/filtering\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst { Title } = Typography;\r\nconst { Group } = Checkbox;\r\n\r\nconst Filter = (props) => {\r\n  const [checkAll, setCheckAll] = useState(true);\r\n  const [checkedList, setCheckedList] = useState(checkAll ? props.items : []);\r\n\r\n  const onChange = useCallback((list) => {\r\n    setCheckedList(list);\r\n    setCheckAll(list.length === props.items.length);\r\n\r\n    props.clickFilterHandler(searchStops(list));\r\n  }, []);\r\n\r\n  const onCheckAllChange = useCallback((event) => {\r\n    setCheckedList(event.target.checked ? props.items : []);\r\n    setCheckAll(event.target.checked);\r\n    props.clickFilterHandler(event.target.checked ? props.items : []);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"filter\">\r\n      <Title level={5}>{ props.title }</Title>\r\n      <Checkbox checked={checkAll} onChange={onCheckAllChange}>Все</Checkbox>\r\n      <Group options={props.items} value={checkedList} onChange={onChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { STOPS } from \"../components/Filter/constants\";\r\n\r\nexport const searchStops = (countStops) => {\r\n  const listStops = [];\r\n\r\n  for (let stop of Object.entries(STOPS)) {\r\n    const [key, value] = stop;\r\n\r\n    if (countStops.includes(value)) {\r\n      listStops.push(+key);\r\n    }\r\n  }\r\n\r\n  return listStops;\r\n};\r\n\r\nexport const filterOfTransfers = (tickets, stops) => {\r\n  if (stops.length === 0) {\r\n    return [];\r\n  } else if (stops.length === STOPS.length) {\r\n    return tickets;\r\n  } else {\r\n    return tickets.filter((item) => {\r\n      const [ from, to ] = item.segments;\r\n  \r\n      return stops.includes(from.stops.length) || stops.includes(to.stops.length)\r\n    });\r\n  }\r\n};\r\n","export const SORT = {\r\n  CHEAP: \"1\",\r\n  FAST: \"2\",\r\n};\r\n\r\nexport const TABS = [\r\n  {\r\n    key: \"1\",\r\n    title: \"Самый дешевый\",\r\n  },\r\n  {\r\n    key: 2,\r\n    title: \"Самый быстрый\",\r\n  },\r\n];\r\n\r\nexport const STOPS = {\r\n  0: \"Без пересадок\",\r\n  1: \"1 пересадка\",\r\n  2: \"2 пересадки\",\r\n  3: \"3 пересадки\"\r\n};\r\n\r\nexport const LIMIT = 5;\r\n\r\nexport const FILTERS = [\r\n  {\r\n    title: \"Количество пересадок\",\r\n    items: Object.values(STOPS),\r\n  }\r\n]\r\n","import { SORT } from \"../constants\";\r\nimport { filterOfTransfers } from \"./filtering\";\r\n\r\nconst sumDurationStops = (ticket) => ticket.reduce((acc, item) => acc + item.duration, 0);\r\n\r\nexport const filteringTickets = (tickets, parameter, stops) => {\r\n  let list = [];\r\n\r\n  if (parameter === SORT.CHEAP) {\r\n    list= tickets.sort((a, b) => a.price - b.price)\r\n  } else if (parameter === SORT.FAST) {\r\n    list = tickets.sort((a, b) => sumDurationStops(a.segments) - sumDurationStops(b.segments));\r\n  }\r\n\r\n  list= filterOfTransfers(list, stops);\r\n\r\n  return list;\r\n};\r\n\r\nexport const range = (date, duration) => {\r\n  const MINUTE = 60;\r\n  const MILISECOND = 1000;\r\n\r\n  const milisecondStartDate = Date.parse(date);\r\n  const milisecondDuration = duration * MINUTE * MILISECOND;\r\n\r\n  const dtStart = new Date(date);\r\n  const dtFinish = new Date(milisecondStartDate + milisecondDuration);\r\n\r\n  return `${dtStart.getHours()}:${dtStart.getMinutes()} - ${dtFinish.getHours()}:${dtFinish.getMinutes()}`;\r\n};\r\n\r\nexport const formatTime = (duration) => {\r\n  const ONE_DAY = 24;\r\n  const ONE_HOUR = 60;\r\n\r\n  let days = 0;\r\n  let hours = Math.floor(duration / ONE_HOUR);\r\n  let minutes = duration % ONE_HOUR;\r\n\r\n  if (hours > ONE_DAY) {\r\n    days = Math.ceil(hours / ONE_DAY);\r\n    hours = hours % ONE_DAY;\r\n  }\r\n\r\n  minutes = minutes < 10 ? `0${minutes}` : minutes;\r\n\r\n  return days > 0 ? `${days}Д ${hours}Ч ${minutes}М` : `${hours}Ч ${minutes}М`;\r\n};\r\n\r\nexport const stopsCount = (count) => {\r\n  let message = \"\";\r\n\r\n  if (count === 0) {\r\n    message = \"Без пересадок\";\r\n  } else if (count === 1) {\r\n    message = `${count} пересадка`;\r\n  } else if (count >= 2 && count < 5) {\r\n    message = `${count} пересадки`;\r\n  } else if (count >= 5) {\r\n    message = `${count} пересадок`;\r\n  }\r\n\r\n  return message.toUpperCase();\r\n}\r\n","import React from \"react\";\r\n\r\nimport { formatTime, range, stopsCount } from \"../../../utils\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Information = (props) => {\r\n  const { date, duration } = props;\r\n\r\n  return (\r\n    <div className=\"information\">\r\n      <div className=\"information__route\">\r\n        <div className=\"information__title\">\r\n          {props.origin}-{props.destination}\r\n        </div>\r\n        <div className=\"information__description\">{range(date, duration)}</div>\r\n      </div>\r\n      <div className=\"information__length\">\r\n        <div className=\"information__title\">В ПУТИ</div>\r\n        <div className=\"information__description\">{formatTime(duration)}</div>\r\n      </div>\r\n      <div className=\"information__stop\">\r\n        <div className=\"information__title\">{stopsCount(props.stops.length)}</div>\r\n        <div className=\"information__description\">{props.stops.join(\", \")}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Information;\r\n","import React from \"react\";\r\n\r\nimport Information from \"./Information\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <header className=\"card__header\">\r\n        <div className=\"card__price\">{props.price} Р</div>\r\n        <img\r\n          src={`https://pics.avs.io/99/36/${props.carrier}.png`}\r\n          alt={props.carrier}\r\n        />\r\n      </header>\r\n      {props.segments.map((item) => (\r\n        <Information {...item} key={item.duration} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import Card from \"../Card\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst List = (props) => (\r\n  <div className=\"aviasales-list-tickets\">\r\n    {props.tickets.map((ticket) => (\r\n      <Card {...ticket} key={`${ticket.price + Math.random()}-${ticket.carrier}`} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default List;\r\n","\r\nconst HeaderMain = () => <header className=\"aviasales-header\">Aviasales</header>;\r\n\r\nexport default HeaderMain;\r\n","import { Button } from \"antd\";\r\n\r\nconst ButtonMain = (props) => {\r\n  return (\r\n    <Button type={props.type} size={props.size} onClick={props.onClickHandler}>\r\n      {props.label}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ButtonMain;\r\n","const PATH_GET_SEARCH_ID = \"https://front-test.beta.aviasales.ru/search\";\r\nconst PATH_GET_TICKETS = \"https://front-test.beta.aviasales.ru/tickets\";\r\n\r\nexport const getSearchId = async () => {\r\n  const data = await fetch(PATH_GET_SEARCH_ID);\r\n  const response = await data.json();\r\n\r\n  return response;\r\n};\r\n\r\nexport const getTickets = async (searchId) => {\r\n  let status = true;\r\n\r\n  while (status) {\r\n    try {\r\n      const data = await fetch(`${PATH_GET_TICKETS}?searchId=${searchId}`);\r\n  \r\n      if (data.status >= 200 && data.status <= 299) {\r\n        const response = await data.json();\r\n        return response;\r\n      } else {\r\n        status = false;\r\n        throw new Error(\"Что-то пошло не так\");\r\n      }\r\n    } catch (error) {\r\n      status = true;\r\n      console.log(\"---data\", error);\r\n    }\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { message, Spin, Tabs, Empty, Typography, Space } from \"antd\";\r\n\r\nimport Filter from \"./components/Filter\";\r\nimport List from \"./components/List\";\r\nimport HeaderMain from \"./components/Header\";\r\nimport ButtonMain from \"./components/Button\";\r\n\r\nimport { getSearchId, getTickets } from \"./query\";\r\nimport { filteringTickets } from \"./utils\";\r\n\r\nimport \"./style.scss\";\r\n\r\nimport { SORT, TABS, STOPS, LIMIT, FILTERS } from \"./constants\";\r\n\r\nconst { Text } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\nconst Aviasales = () => {\r\n  const [searchId, setSearchId] = useState(null);\r\n  const [ticketsAll, setTicketsAll] = useState([]);\r\n  const [endSearchTickets, setEndSearchTickets] = useState(false);\r\n  const [firstPackTickets, setFirstPackTickets] = useState(true);\r\n\r\n  const [defaultFilter, setDefaultFilter] = useState(SORT.CHEAP);\r\n  const [sortTickets, setSortTickets] = useState({\r\n    tickets: [],\r\n    viewTickets: []\r\n  });\r\n  const [stops, setStops] = useState(Object.keys(STOPS));\r\n\r\n  useEffect(() => {\r\n    getSearchId()\r\n      .then((response) => setSearchId(response.searchId))\r\n      .catch(() =>\r\n        message.warning(\"Что-то пошло не так, перезагрузите страницу\")\r\n      );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (searchId === null) {\r\n      return;\r\n    }\r\n\r\n    if (!endSearchTickets) {\r\n      getTickets(searchId)\r\n        .then((response) => {\r\n          setEndSearchTickets(response.stop);\r\n          setTicketsAll([...ticketsAll, ...response.tickets]);\r\n        \r\n          if (firstPackTickets) {\r\n            const list = filteringTickets(ticketsAll, defaultFilter, stops);\r\n\r\n            setSortTickets({\r\n              tickets: list,\r\n              viewTickets: list.slice().splice(0, LIMIT)\r\n            });\r\n          }\r\n\r\n          setFirstPackTickets(false);\r\n        });\r\n    }\r\n  }, [endSearchTickets, searchId, ticketsAll]);\r\n\r\n  useEffect(() => {\r\n    if (endSearchTickets) {\r\n      const list = filteringTickets(ticketsAll, defaultFilter, stops);\r\n\r\n      setSortTickets({\r\n        tickets: list,\r\n        viewTickets: list.slice().splice(0, LIMIT)\r\n      });\r\n    }\r\n  }, [ endSearchTickets, ticketsAll, defaultFilter, stops ]);\r\n\r\n  const onChangeTabs = (key) => {\r\n    const list = filteringTickets(ticketsAll, key, stops);\r\n    setDefaultFilter(key);\r\n\r\n    setSortTickets(() => ({\r\n      tickets: list,\r\n      viewTickets: list.slice().splice(0, LIMIT)\r\n    }));\r\n  };\r\n\r\n  const onLoadTickets = () => {\r\n    setSortTickets({\r\n      tickets: sortTickets.tickets,\r\n      viewTickets: [ ...sortTickets.viewTickets, ...sortTickets.tickets.slice().splice(sortTickets.viewTickets.length, LIMIT) ]\r\n    });\r\n  }\r\n\r\n  return (\r\n    <section className=\"aviasales\">\r\n      <HeaderMain />\r\n      <div className=\"aviasales__wrapper\">\r\n        <aside className=\"aviasales__filters\">\r\n          { FILTERS.map((item) => <Filter title={item.title} items={item.items} clickFilterHandler={setStops} />) }\r\n        </aside>\r\n        <div className=\"aviasales__content\">  \r\n          <Tabs defaultActiveKey={defaultFilter} onChange={onChangeTabs}>\r\n            {TABS.map((tab) => (\r\n              <TabPane tab={tab.title} key={tab.key}>\r\n                <Space direction=\"vertical\">\r\n                  <Text>{`Мы нашли ${ticketsAll.length} билетов`}</Text>\r\n                  <Text>{`Мы нашли ${sortTickets.tickets.length} билетов по выбраным фильтрам`}</Text>\r\n                  <Text>{`Показано ${sortTickets.viewTickets.length} из ${sortTickets.tickets.length} билетов`}</Text>\r\n                  { !endSearchTickets && <Spin />  }\r\n                </Space>\r\n                { stops.length === 0 && <Empty description={`Мы нашли ${sortTickets.tickets.length} билетов по выбраным фильтрам`} /> }\r\n                { sortTickets.tickets.length > 0 && (\r\n                  <>\r\n                    <List tickets={sortTickets.viewTickets} />\r\n                    <ButtonMain type=\"primary\" size=\"large\" onClickHandler={onLoadTickets} label={`Показать ещё ${LIMIT} билетов`} />\r\n                  </>\r\n                  )\r\n                }\r\n              </TabPane>\r\n            ))}\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Aviasales;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport MainPage from \"./components/Main\";\r\nimport Aviasales from \"./Aviasales\";\r\n\r\nexport const mainPath = \"/reactapp\"\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <Switch>\r\n      <Route path={`${process.env.PUBLIC_URL}`} component={MainPage} exact />\r\n      <Route path={`${process.env.PUBLIC_URL}/aviasales`} component={Aviasales} exact />\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport './index.css';\r\n\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}